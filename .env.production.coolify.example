# ==============================================================================
#                 AGENT OS PRODUCTION ENVIRONMENT - COOLIFY
# ==============================================================================
#
# DEPLOYMENT ORDER:
# 1. Configure ALL variables in this file first
# 2. Deploy to Coolify with these environment variables
# 3. Leave LangGraph-specific variables (LANGGRAPH_DEPLOYMENT_ID, etc.) as placeholders
# 4. Test that all services are accessible and SSL certificates work
# 5. Then deploy to LangGraph Cloud using .env.production.langgraph.example
# 6. After LangGraph deployment, copy deployment ID, API URL, and tenant ID back here
# 7. Redeploy in Coolify to complete the integration
#
# IMPORTANT: Update all 'yourdomain.com' references with your actual domain
# IMPORTANT: All URLs in Docker Compose Caddy labels must be hardcoded (not env vars)
#
# ==============================================================================


# ==============================================================================
#                          BASE CONFIGURATION
# ==============================================================================
#
# Your production domain - used to construct all service URLs
# Example: agent-os-starter-pack.com
#
# All service URLs follow the pattern: https://SERVICE.yourdomain.com
# Update these to match your domain configuration
#
FRONTEND_BASE_URL=https://app.yourdomain.com
SUPABASE_PUBLIC_URL=https://supabase.yourdomain.com
LANGCONNECT_BASE_URL=https://langconnect.yourdomain.com
MCP_PUBLIC_URL=https://mcp.yourdomain.com
N8N_PUBLIC_URL=https://n8n.yourdomain.com
WINDMILL_PUBLIC_URL=https://windmill.yourdomain.com

# LangGraph External URL - INITIALLY LEAVE AS PLACEHOLDER
# After LangGraph Cloud deployment, update with your actual deployment URL
# Format: https://your-app-hash.eu.langgraph.app or https://your-app-hash.us.langgraph.app
LANGGRAPH_EXTERNAL_URL=https://placeholder-will-update-after-langgraph-deployment.langgraph.app


# ==============================================================================
#                         SUPABASE CONFIGURATION
# ==============================================================================
#
# Core database and authentication services
# Generate JWT secrets and keys: https://supabase.com/docs/guides/self-hosting/docker
#

# -- PostgreSQL Database Password --
# Used by all services to connect to the shared database
# Generate with: openssl rand -base64 32
POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password

# -- Supabase JWT and API Keys --
# CRITICAL: Generate these using the Supabase self-hosting guide
# JWT_SECRET: Min 32 characters, used to sign auth tokens
# SUPABASE_ANON_KEY: Public client key (respects Row Level Security)
# SUPABASE_SERVICE_KEY: Admin key for backend operations (bypasses RLS)
JWT_SECRET=your-super-secret-jwt-secret-with-at-least-32-characters
SUPABASE_ANON_KEY=your-supabase-anon-key-from-generator
SUPABASE_SERVICE_KEY=your-supabase-service-key-from-generator

# -- Authentication Settings --
DISABLE_SIGNUP=true                    # True = admins create users manually in Supabase Studio
ENABLE_EMAIL_SIGNUP=true               # Allow email/password authentication
ENABLE_EMAIL_AUTOCONFIRM=false         # False = users must verify email before login
ENABLE_ANONYMOUS_USERS=false           # Disable guest sessions
ENABLE_PHONE_SIGNUP=false              # Disable SMS authentication

# -- SMTP Email Configuration --
# Required for: password resets, email verification, user invitations
# Gmail setup: Google Account → Security → 2FA → App Passwords
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com         # Your Gmail address
SMTP_PASS=your-gmail-app-password      # 16-character app password (not account password)
SMTP_ADMIN_EMAIL=admin@yourdomain.com  # "From" address for system emails
SMTP_SENDER_NAME="Your Company Name"   # Display name in email clients

# -- Supabase Internal Secrets --
# SECRET_KEY_BASE: Used by connection pooler for session encryption
# VAULT_ENC_KEY: Encrypts secrets stored in Supabase Vault
# Generate both with: openssl rand -base64 64 | tr -d '\n'
SECRET_KEY_BASE=your-base64-secret-key-base
VAULT_ENC_KEY=your-base64-vault-encryption-key

# -- Supabase Studio Dashboard --
# Credentials for accessing Supabase Studio at https://supabase.yourdomain.com
# CRITICAL: Change from these defaults for production!
DASHBOARD_USERNAME=admin
DASHBOARD_PASSWORD=your-secure-dashboard-password

# -- Connection Pooler Configuration --
# Advanced settings for Supavisor connection pooler
# Only modify if you understand connection pooling and have specific requirements
POOLER_TENANT_ID=1000                  # Tenant identifier for pooler
POOLER_DEFAULT_POOL_SIZE=25            # Connections per pool
POOLER_MAX_CLIENT_CONN=200             # Max concurrent client connections
POOLER_DB_POOL_SIZE=5                  # Internal pool size


# ==============================================================================
#                     LANGCONNECT API CONFIGURATION
# ==============================================================================
#
# FastAPI backend for document processing, RAG, and knowledge management
#

# -- Service Account Key --
# Used for internal service-to-service authentication
# Must match the key used in MCP server and LangGraph
# Generate with: openssl rand -base64 32
LANGCONNECT_SERVICE_ACCOUNT_KEY=your-super-secret-langconnect-service-key

# -- GCP Image Storage (Optional) --
# Only required if processing images in knowledge bases or using OCR
# Get service account JSON from GCP Console → IAM → Service Accounts
IMAGE_STORAGE_ENABLED=false                          # Set to true if using GCP
GCP_PROJECT_ID=your-gcp-project-id                   # Your GCP project ID
GCP_STORAGE_BUCKET=your-gcp-storage-bucket-name      # GCS bucket name
GCP_SERVICE_ACCOUNT_KEY=your-base64-encoded-key      # Base64 JSON: cat key.json | base64 -w 0
IMAGE_PUBLIC_ACCESS=true                             # Public URLs (true) vs signed URLs (false)


# ==============================================================================
#                        MCP SERVER CONFIGURATION
# ==============================================================================
#
# Model Context Protocol server - secure gateway for AI agent tools
#

# -- MCP Authentication Secrets --
# MCP_TOKEN_SIGNING_SECRET: Signs JWT tokens for tool execution (min 32 chars)
# MCP_SERVICE_ACCOUNT_KEY: Static key for automated service calls
# CRITICAL: These must match the values used in LangGraph environment
# Generate both with: openssl rand -base64 32
MCP_TOKEN_SIGNING_SECRET=your-super-secret-mcp-token-signing-secret
MCP_SERVICE_ACCOUNT_KEY=your-super-secret-mcp-service-account-key

# -- MCP Server URL (for internal references) --
# Used by LangGraph to call back to MCP server
# Must be the public HTTPS URL
LANGGRAPH_MCP_SERVER_URL=https://mcp.yourdomain.com

# -- Arcade Tool Integration (Optional) --
# Provides OAuth-based access to external services (Gmail, Slack, etc.)
# Get API key from: https://docs.arcade.dev
ENABLE_ARCADE=false                                          # Set true to enable
ENABLED_ARCADE_SERVICES=microsoft,gmail,google,slack         # Comma-separated list
ARCADE_API_KEY=your-arcade-api-key                           # From Arcade dashboard


# ==============================================================================
#                       LANGGRAPH CONFIGURATION
# ==============================================================================
#
# LangGraph Cloud deployment settings
# IMPORTANT: Initial deployment leaves these as placeholders
# Update after LangGraph Cloud deployment is complete
#

# -- LangSmith Tracing (Required) --
# Provides debugging, monitoring, and observability for agent runs
# Get API key from: https://smith.langchain.com
LANGSMITH_TRACING=true
LANGSMITH_ENDPOINT=https://eu.api.smith.langchain.com    # Or us.api.smith.langchain.com
LANGSMITH_PROJECT=agent-os-production                    # Your LangSmith project name
LANGSMITH_API_KEY=ls__your-langsmith-api-key

# -- LangGraph Deployment Details --
# INITIALLY LEAVE THESE AS PLACEHOLDERS
# After deploying to LangGraph Cloud, copy these values from the dashboard:
# - Deployment ID: Found in deployment URL or dashboard
# - Tenant ID: Found in deployment URL or dashboard  
# - Default Graph ID: The agent to use by default (usually "tools_agent")
LANGGRAPH_DEPLOYMENT_ID=placeholder-update-after-langgraph-deploy
LANGGRAPH_TENANT_ID=placeholder-update-after-langgraph-deploy
LANGGRAPH_DEFAULT_GRAPH_ID=tools_agent


# ==============================================================================
#                      WEB FRONTEND CONFIGURATION
# ==============================================================================
#
# Next.js application environment variables
# NEXT_PUBLIC_ variables are exposed to the browser
#

# -- Supabase Client Configuration --
NEXT_PUBLIC_SUPABASE_URL=https://supabase.yourdomain.com
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key-from-generator

# -- Backend Service URLs --
NEXT_PUBLIC_LANGCONNECT_API_URL=https://langconnect.yourdomain.com
NEXT_PUBLIC_MCP_SERVER_URL=https://mcp.yourdomain.com
NEXT_PUBLIC_N8N_URL=https://n8n.yourdomain.com
NEXT_PUBLIC_WINDMILL_URL=https://windmill.yourdomain.com
NEXT_PUBLIC_BASE_API_URL=https://app.yourdomain.com/api
NEXT_PUBLIC_FRONTEND_BASE_URL=https://app.yourdomain.com

# -- LangGraph Frontend Configuration --
# INITIALLY LEAVE AS PLACEHOLDERS
# Update after LangGraph deployment with the actual API URL and retrieve IDs from dashboard
# Optionally updated the default graph id based on preference (this is the default agent in the chat window of the frontend UI)
NEXT_PUBLIC_LANGGRAPH_API_URL=https://placeholder-update-after-langgraph-deployment.langgraph.app
NEXT_PUBLIC_LANGGRAPH_DEPLOYMENT_ID=placeholder-update-after-langgraph-deployment
NEXT_PUBLIC_LANGGRAPH_TENANT_ID=placeholder-update-after-langgraph-deployment
NEXT_PUBLIC_LANGGRAPH_DEFAULT_GRAPH_ID=tools_agent

# -- Feature Flags --
NEXT_PUBLIC_GOOGLE_AUTH_DISABLED=true                    # Google OAuth not configured
NEXT_PUBLIC_IMAGE_STORAGE_ENABLED=false


# ==============================================================================
#                      WORKFLOW AUTOMATION SERVICES
# ==============================================================================

# -- n8n Configuration --
# CRITICAL: Keep these keys constant - changing them will encrypt data with new keys
# and make existing workflows and credentials inaccessible
# Generate with: openssl rand -base64 32
N8N_ENCRYPTION_KEY=your-super-secret-n8n-encryption-key
N8N_USER_MANAGEMENT_JWT_SECRET=your-super-secret-n8n-jwt-secret

# -- Windmill Configuration --
# Credentials for Windmill's dedicated PostgreSQL database
# Generate password with: openssl rand -base64 32
SERVICE_USER_POSTGRES=windmill
SERVICE_PASSWORD_POSTGRES=your-super-secret-windmill-db-password


# ==============================================================================
#                       EXTERNAL API KEYS
# ==============================================================================
#
# API keys for AI models and external tools
# All are optional but enable specific capabilities
#

# -- AI Model Providers --
OPENAI_API_KEY=sk-your-openai-api-key                   # GPT-4, GPT-3.5, embeddings
ANTHROPIC_API_KEY=your-anthropic-api-key                # Claude 3 models

# -- Tool APIs --
TAVILY_API_KEY=your-tavily-api-key                      # Web search for agents
E2B_API_KEY=your-e2b-api-key                            # Code execution sandbox
SUPADATA_API_TOKEN=your-supadata-token                  # YouTube transcript extraction


# ==============================================================================
#                     MONITORING & OBSERVABILITY
# ==============================================================================
#
# Sentry error tracking and performance monitoring (optional)
# Get DSN from: https://sentry.io
#

SENTRY_DSN_LANGCONNECT=your-sentry-dsn                   # LangConnect API errors
SENTRY_DSN_MCP=your-sentry-dsn                           # MCP server errors  
SENTRY_DSN_WEB=your-sentry-dsn                           # Frontend errors
SENTRY_DSN_LANGGRAPH=your-sentry-dsn                     # LangGraph agent errors
SENTRY_ENVIRONMENT=production                            # Environment tag
SENTRY_TRACES_SAMPLE_RATE=0.1                            # 10% trace sampling (reduce costs)
SENTRY_PROFILES_SAMPLE_RATE=0.0                          # Disable profiling
SENTRY_REPLAYS_SESSION_SAMPLE_RATE=0.0                   # Disable session replay
SENTRY_REPLAYS_ON_ERROR_SAMPLE_RATE=1.0                  # Capture errors only


# ==============================================================================
#                        APPLICATION SETTINGS
# ==============================================================================

# -- Debug and Logging --
DEBUG=false                                              # Disable debug mode in production
LOG_LEVEL=INFO                                           # INFO, WARNING, ERROR